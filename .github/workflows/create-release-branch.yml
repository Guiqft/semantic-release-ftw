name: Create Release PR

on:
    workflow_dispatch:
        inputs:
            releaseType:
                description: "Release Type"
                required: true
                default: "rc"
                type: choice
                options:
                    - rc
                    - latest

permissions:
    pull-requests: write
    contents: write

jobs:
    get-next-version:
        runs-on: ubuntu-latest
        steps:
            - name: Set Branch Name
              id: set-brach-name
              run: |
                  if [ "${{ github.event.inputs.releaseType }}" == "rc" ]; then
                      echo "BRANCH_NAME=homolog" >> $GITHUB_OUTPUT
                  elif [ "${{ github.event.inputs.releaseType }}" == "latest" ]; then
                      echo "BRANCH_NAME=main" >> $GITHUB_OUTPUT
                  fi

            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0
                  token: ${{ secrets.GH_TOKEN }}
                  ref: ${{ steps.set-brach-name.outputs.BRANCH_NAME }}

            - name: Rebase
              run: |
                  git config user.name github-actions
                  git config user.email github-actions@github.com

                  git checkout origin/dev
                  git pull origin dev
                  git rebase origin/${{ steps.set-brach-name.outputs.BRANCH_NAME }}

            - uses: oven-sh/setup-bun@v1
              with:
                  bun-version: latest

            - name: Install dependencies
              run: bun i

            - run: GITHUB_REF=${{ steps.set-brach-name.outputs.BRANCH_NAME }} bunx semantic-release --dry-run --no-ci
              id: get-next-version
              env:
                  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        outputs:
            new-release-published: ${{ steps.get-next-version.outputs.new-release-published }}
            new-release-version: ${{ steps.get-next-version.outputs.new-release-version }}
            release-branch-name: ${{ steps.set-brach-name.outputs.BRANCH_NAME }}

    create-pr:
        runs-on: ubuntu-latest
        needs: get-next-version
        if: needs.get-next-version.outputs.new-release-published == 'true'
        steps:
            - name: Set Release Branch
              id: set-brach-name
              run: |
                  RAW_VERSION=$(echo ${{ needs.get-next-version.outputs.new-release-version }} | sed 's/-.*$//')
                  echo "RELEASE_BRANCH=release/v$RAW_VERSION" >> "$GITHUB_OUTPUT"

            - uses: actions/checkout@v3
            - name: Create Release Branch
              run: |
                  RELEASE_BRANCH=${{ steps.set-brach-name.outputs.RELEASE_BRANCH }}
                  if git show-ref --quiet refs/heads/$RELEASE_BRANCH; then
                    echo "Release branch $RELEASE_BRANCH already exists. Skipping branch creation."
                  else
                    git branch $RELEASE_BRANCH ${{ github.head_ref }}
                    git push origin $RELEASE_BRANCH -f
                  fi

            - name: pull-request
              run: |
                  RELEASE_BRANCH=${{ steps.set-brach-name.outputs.RELEASE_BRANCH }}
                  gh pr create \
                    --base ${{ needs.get-next-version.outputs.release-branch-name }} \
                    --head $RELEASE_BRANCH \
                    --title 'chore: release  v${{ needs.get-next-version.outputs.new-release-version }}' \
                    --body 'Created by Github action'
              env:
                  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
